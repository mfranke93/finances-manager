* feature-plotting-styles [0%]
  How to implement different styles of plotting? We have a few problems that need to be fixed:
** TODO Depending on the visualization, the $y$ range may change.
   In a visualization where we accumulate over time, the $y$ range of the values
   will naturally be greater than when only showing high and low of day. Even
   more so if we show the minimum and maximum for each accumulated day. Here,
   the ranges can easily increase by 400 on the first of the month.
   
   Solution:
    - The painting part must all be done in the original UI element. 
    - The data is queried in the UI element.
    - The generation of graphical primitives is delegated to a polymorphic class
      which builds the line based on its own rules.
    - The delegated class should be able to tell the UI element which data range
      it has.
    - The UI class then builds the scalers for the grid and axes based on that
      information.
    - The delegated class must know its own geometry.
    - The delegated class gets a QSqlQuery object to build the data from. This
      way, we are free to filter data beforehand on the SQL side.
*** Interface of drawable:
    - Either collection of drawables
    - or struct { QPainterPath..., QBrush, QPen }
    - or any class with a paint(QPainter*) method
      
